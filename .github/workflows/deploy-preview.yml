name: Deploy Preview

on: [pull_request]

env:
  NEON_DATABASE_USERNAME: ${{ secrets.NEON_DATABASE_USERNAME }} # change this to your database username
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for commenting on pull requests for private repos
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }} # You can generate a an API key in your account settings
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }} # You can find this in your project settings
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  DOTENV_PRIVATE_KEY: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}

jobs:
  deploy-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Link Vercel App
        run: vercel link --yes --project nextjs-vercel-monorepo-web --token=${{ env.VERCEL_TOKEN }} --scope=graveflex

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Get the Commit Author Name
        run: |
          echo "AUTHOR_NAME=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV

      - name: Set Commit SHA as an environment variable
        run: echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v4
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          # parent: dev # optional (defaults to your primary branch)
          branch_name: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          username: ${{ env.NEON_DATABASE_USERNAME }}
          api_key: ${{ env.NEON_API_KEY }}

      - name: Run Migrations
        run: |
            touch .env.local

            echo DATABASE_URL=${{ steps.create-branch.outputs.db_url_with_pooler }}?sslmode=require >> .env.local
            echo DIRECT_URL=${{ steps.create-branch.outputs.db_url }}?sslmode=require >> .env.local

            pnpm db:migrate

      - name: Assign DB ENV Vars
        continue-on-error: true
        run: |
          branch_name=${{ steps.branch-name.outputs.current_branch }}
          echo ${{ steps.create-branch.outputs.db_url_with_pooler }} | vercel env add DATABASE_URL preview $branch_name --scope=graveflex --token=${{ env.VERCEL_TOKEN }}
          echo ${{ steps.create-branch.outputs.db_url }} | vercel env add DATABASE_URL_UNPOOLED preview $branch_name --scope=graveflex --token=${{ env.VERCEL_TOKEN }}

      - name: Pull Vercel Environment Information
        run: |
          branch_name=${{ steps.branch-name.outputs.current_branch }}
          vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }} --git-branch=$branch_name --scope=graveflex

      - name: Build Project Artifacts
        run: pnpm env:dev -- vercel build --token=${{ env.VERCEL_TOKEN }} --scope=graveflex

      - name: Deploy Preview to Vercel
        id: deploy
        run: |
          branch_name="${{ steps.branch-name.outputs.current_branch }}"
          commit_sha="${{ env.COMMIT_SHA }}"
          pr_id="${{ github.event.number }}"
          author_name="${{ env.AUTHOR_NAME }}"
          db_url="${{ steps.create-branch.outputs.db_url_with_pooler }}"
          db_url_unpooled="${{ steps.create-branch.outputs.db_url }}"
          commit_message="${{ github.event.workflow_run.head_commit.message }}"
          gh_username="${{ github.actor }}"
          token="${{ env.VERCEL_TOKEN }}"
          preview_url=$(vercel deploy \
            --prebuilt \
            --token="$token" \
            --scope=graveflex \
            --yes \
            --debug \
            -m githubCommitOrg=graveflex \
            -m githubCommitRef="$branch_name" \
            -m githubCommitRepo=nextjs-vercel \
            -m githubCommitSha="$commit_sha" \
            -m githubCommitMessage="$commit_message" \
            -m githubCommitAuthorName="$gh_username" \
          )
          echo "preview_url=$preview_url" >> $GITHUB_OUTPUT

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
          message: |
            Vercel Preview URL :rocket: : ${{ steps.deploy.outputs.preview_url }}
            Neon branch :elephant: : https://console.neon.tech/app/projects/${{ env.NEON_PROJECT_ID }}/branches/${{ steps.create-branch.outputs.branch_id }}
