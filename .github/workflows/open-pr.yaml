# for PR deploys
name: Create DB for PR Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
  NEON_BASE_URL: ${{ secrets.NEON_BASE_URL }}
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  create-sync-database:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.action == 'opened'
    if: |
      (startsWith(github.head_ref, 'chore/') ||
      startsWith(github.head_ref, 'docs/') ||
      startsWith(github.head_ref, 'feat/') ||
      startsWith(github.head_ref, 'fix/') ||
      startsWith(github.head_ref, 'perf/') ||
      startsWith(github.head_ref, 'refactor/') ||
      startsWith(github.head_ref, 'revert/') ||
      startsWith(github.head_ref, 'style/') ||
      startsWith(github.head_ref, 'test/'))
    steps:
      - name: Determine DB
        run: |
          echo 'Running against: ${{ github.event.pull_request.base.label }}'
      - name: Determine Base DB
        id: set-base-db
        env:
          BASE_BRANCH: ${{ github.event.pull_request.base.label }}
        run: |
          if [[ -z ${BASE_BRANCH} == "develop" ]]; then
            $BASE_DB_URL=${{ secrets.DEVELOP_DB_URL }}
          elif [[ -z $BASE_BRANCH == "preprod" ]]; then
            $BASE_DB_URL=${{ secrets.PREPROD_DB_URL }}
          elif [[ -z $BASE_BRANCH == "main" ]]; then
            $BASE_DB_URL=${{ secrets.MAIN_DB_URL }}
          else
            $BASE_LABEL=${{ github.event.pull_request.base.label }}
            $BASE_URL="${BASE_LABEL/\//%2F}"
            $BASE_DB_URL="${{ secrets.NEON_URL_BASE }}/${BASE_URL}"
          fi

          echo $BASE_DB_URL
          echo "::add-mask::$BASE_DB_URL" 
          echo "BASE_DB_URL=$BASE_DB_URL" >> "$GITHUB_OUTPUT"
      - name: Echo Secret
        run: |
          echo "This is the secret: ${{ steps.set-base-db.outputs.BASE_DB_URL }}"
      - name: Create DB
        run: |
          echo "Creating DB"
      - name: Copy DB
        run: |
          echo "Copying DB"

  build-and-deploy:
    # needs: create-sync-database
    runs-on: ubuntu-latest
    if: |
      (startsWith(github.head_ref, 'chore/') ||
      startsWith(github.head_ref, 'docs/') ||
      startsWith(github.head_ref, 'feat/') ||
      startsWith(github.head_ref, 'fix/') ||
      startsWith(github.head_ref, 'perf/') ||
      startsWith(github.head_ref, 'refactor/') ||
      startsWith(github.head_ref, 'revert/') ||
      startsWith(github.head_ref, 'style/') ||
      startsWith(github.head_ref, 'test/'))
    steps:
      - name: Get DB URL
        run: |
          echo 'Current branch: ${GITHUB_HEAD_REF}' 
          $CURRENT_LABEL=${GITHUB_HEAD_REF}
          $CURRENT_URL="${CURRENT_LABEL/\//%2F}"
          $CURRENT_DB_URL="${{ secrets.NEON_URL_BASE }}/${CURRENT_URL}"

          echo $CURRENT_DB_URL
          echo "::add-mask::$CURRENT_DB_URL"
          echo "CURRENT_DB_URL=$CURRENT_DB_URL" >> "$GITHUB_OUTPUT"
