# for PR deploys
name: Create DB for PR Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
  NEON_BASE_URL: ${{ secrets.NEON_BASE_URL }}
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"
  create-sync-database:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.action == 'opened'
    if: |
      (startsWith(github.head_ref, 'chore/') ||
      startsWith(github.head_ref, 'docs/') ||
      startsWith(github.head_ref, 'feat/') ||
      startsWith(github.head_ref, 'fix/') ||
      startsWith(github.head_ref, 'perf/') ||
      startsWith(github.head_ref, 'refactor/') ||
      startsWith(github.head_ref, 'revert/') ||
      startsWith(github.head_ref, 'style/') ||
      startsWith(github.head_ref, 'test/'))
    steps:
      - name: Determine DB
        run: |
          echo 'Running against: ${{ github.event.pull_request.base.ref }}'
      - name: Determine Base DB
        id: set-base-db
        env:
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: |
          if [[ -z ${BASE_BRANCH} == "develop" ]]; then
            $BASE_DB_URL=${{ secrets.DEVELOP_DB_URL }}
          elif [[ -z $BASE_BRANCH == "preprod" ]]; then
            $BASE_DB_URL=${{ secrets.PREPROD_DB_URL }}
          elif [[ -z $BASE_BRANCH == "main" ]]; then
            $BASE_DB_URL=${{ secrets.MAIN_DB_URL }}
          else
            $BASE_URL="${BASE_BRANCH/\//%2F}"
            $BASE_DB_URL="${{ secrets.NEON_URL_BASE }}/${BASE_URL}"
          fi

          echo $BASE_DB_URL
          echo "::add-mask::$BASE_DB_URL" 
          echo "BASE_DB_URL=$BASE_DB_URL" >> "$GITHUB_OUTPUT"
      - name: Echo Secret
        run: |
          echo "This is the secret: ${{ steps.set-base-db.outputs.BASE_DB_URL }}"
      - name: Create DB
        run: |
          echo "Creating DB"
      - name: Copy DB
        run: |
          echo "Copying DB"

  build-and-deploy:
    # needs: create-sync-database
    runs-on: ubuntu-latest
    if: |
      (startsWith(github.head_ref, 'chore/') ||
      startsWith(github.head_ref, 'docs/') ||
      startsWith(github.head_ref, 'feat/') ||
      startsWith(github.head_ref, 'fix/') ||
      startsWith(github.head_ref, 'perf/') ||
      startsWith(github.head_ref, 'refactor/') ||
      startsWith(github.head_ref, 'revert/') ||
      startsWith(github.head_ref, 'style/') ||
      startsWith(github.head_ref, 'test/'))
    steps:
      - name: Get DB URL
        run: |
          echo 'Current branch: ${{ github.ref_name }}' 
          $CURRENT_LABEL=${{ github.ref_name }}
          $CURRENT_URL="${${CURRENT_LABEL}/\//%2F}"
          $CURRENT_DB_URL="${{ secrets.NEON_URL_BASE }}/${CURRENT_URL}"

          echo $CURRENT_DB_URL
          echo "::add-mask::$CURRENT_DB_URL"
          echo "CURRENT_DB_URL=$CURRENT_DB_URL" >> "$GITHUB_OUTPUT"
